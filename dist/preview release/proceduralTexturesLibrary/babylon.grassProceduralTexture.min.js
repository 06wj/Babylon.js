var __extends=this&&this.__extends||(function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,o){r.__proto__=o}||function(r,o){for(var e in o)o.hasOwnProperty(e)&&(r[e]=o[e])};return function(o,e){function t(){this.constructor=o}r(o,e),o.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}})(),__decorate=this&&this.__decorate||function(r,o,e,t){var n,i=arguments.length,l=i<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,e):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(r,o,e,t);else for(var a=r.length-1;a>=0;a--)(n=r[a])&&(l=(i<3?n(l):i>3?n(o,e,l):n(o,e))||l);return i>3&&l&&Object.defineProperty(o,e,l),l},BABYLON;!(function(r){var o=(function(o){function e(e,t,n,i,l){var a=o.call(this,e,t,"grassProceduralTexture",n,i,l)||this;return a._groundColor=new r.Color3(1,1,1),a._grassColors=[new r.Color3(.29,.38,.02),new r.Color3(.36,.49,.09),new r.Color3(.51,.6,.28)],a.updateShaderUniforms(),a}return __extends(e,o),e.prototype.updateShaderUniforms=function(){this.setColor3("herb1Color",this._grassColors[0]),this.setColor3("herb2Color",this._grassColors[1]),this.setColor3("herb3Color",this._grassColors[2]),this.setColor3("groundColor",this._groundColor)},Object.defineProperty(e.prototype,"grassColors",{get:function(){return this._grassColors},set:function(r){this._grassColors=r,this.updateShaderUniforms()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"groundColor",{get:function(){return this._groundColor},set:function(r){this._groundColor=r,this.updateShaderUniforms()},enumerable:!0,configurable:!0}),e.prototype.serialize=function(){var e=r.SerializationHelper.Serialize(this,o.prototype.serialize.call(this));return e.customType="BABYLON.GrassProceduralTexture",e},e.Parse=function(o,t,n){return r.SerializationHelper.Parse((function(){return new e(o.name,o._size,t,void 0,o._generateMipMaps)}),o,t,n)},__decorate([r.serializeAsColor3()],e.prototype,"grassColors",null),__decorate([r.serializeAsColor3()],e.prototype,"groundColor",null),e})(r.ProceduralTexture);r.GrassProceduralTexture=o})(BABYLON||(BABYLON={})),BABYLON.Effect.ShadersStore.grassProceduralTexturePixelShader="precision highp float;\nvarying vec2 vPosition;\nvarying vec2 vUV;\nuniform vec3 herb1Color;\nuniform vec3 herb2Color;\nuniform vec3 herb3Color;\nuniform vec3 groundColor;\nfloat rand(vec2 n) {\nreturn fract(cos(dot(n,vec2(12.9898,4.1414)))*43758.5453);\n}\nfloat noise(vec2 n) {\nconst vec2 d=vec2(0.0,1.0);\nvec2 b=floor(n),f=smoothstep(vec2(0.0),vec2(1.0),fract(n));\nreturn mix(mix(rand(b),rand(b+d.yx),f.x),mix(rand(b+d.xy),rand(b+d.yy),f.x),f.y);\n}\nfloat fbm(vec2 n) {\nfloat total=0.0,amplitude=1.0;\nfor (int i=0; i<4; i++) {\ntotal+=noise(n)*amplitude;\nn+=n;\namplitude*=0.5;\n}\nreturn total;\n}\nvoid main(void) {\nvec3 color=mix(groundColor,herb1Color,rand(gl_FragCoord.xy*4.0));\ncolor=mix(color,herb2Color,rand(gl_FragCoord.xy*8.0));\ncolor=mix(color,herb3Color,rand(gl_FragCoord.xy));\ncolor=mix(color,herb1Color,fbm(gl_FragCoord.xy*16.0));\ngl_FragColor=vec4(color,1.0);\n}";