{"version":3,"sources":["webpack://PTLIB/webpack/universalModuleDefinition","webpack://PTLIB/webpack/bootstrap","webpack://PTLIB/../Tools/Gulp/node_modules/webpack/buildin/global.js","webpack://PTLIB/../Tools/Gulp/../../proceduralTexturesLibrary/legacy/legacy-brick.ts","webpack://PTLIB/./src/brick/brickProceduralTexture.fragment.fx","webpack://PTLIB/../Tools/Gulp/../../proceduralTexturesLibrary/src/brick/brickProceduralTexture.ts","webpack://PTLIB/../Tools/Gulp/../../proceduralTexturesLibrary/src/brick/index.ts","webpack://PTLIB/external {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs\",\"commonjs2\":\"babylonjs\",\"amd\":\"babylonjs\"}"],"names":[],"mappings":"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","file":"babylon.brickProceduralTexture.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babylonjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"babylonjs-procedural-textures\", [\"babylonjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"babylonjs-procedural-textures\"] = factory(require(\"babylonjs\"));\n\telse\n\t\troot[\"PTLIB\"] = factory(root[\"BABYLON\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_babylonjs__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./legacy/legacy-brick.ts\");\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import * as proceduralTexture from \"../src/brick/index\";\r\n\r\n/**\r\n * This is the entry point for the UMD module.\r\n * The entry point for a future ESM package should be index.ts\r\n */\r\nvar globalObject = (typeof global !== 'undefined') ? global : ((typeof window !== 'undefined') ? window : undefined);\r\nif (typeof globalObject !== \"undefined\") {\r\n    for (var key in proceduralTexture) {\r\n        (<any>globalObject).BABYLON[key] = (<any>proceduralTexture)[key];\r\n    }\r\n}\r\n\r\nexport * from \"../src/brick/index\";","module.exports = \"precision highp float;\\nvarying vec2 vPosition;\\nvarying vec2 vUV;\\nuniform float numberOfBricksHeight;\\nuniform float numberOfBricksWidth;\\nuniform vec3 brickColor;\\nuniform vec3 jointColor;\\nfloat rand(vec2 n) {\\nreturn fract(cos(dot(n,vec2(12.9898,4.1414)))*43758.5453);\\n}\\nfloat noise(vec2 n) {\\nconst vec2 d=vec2(0.0,1.0);\\nvec2 b=floor(n),f=smoothstep(vec2(0.0),vec2(1.0),fract(n));\\nreturn mix(mix(rand(b),rand(b+d.yx),f.x),mix(rand(b+d.xy),rand(b+d.yy),f.x),f.y);\\n}\\nfloat fbm(vec2 n) {\\nfloat total=0.0,amplitude=1.0;\\nfor (int i=0; i<4; i++) {\\ntotal+=noise(n)*amplitude;\\nn+=n;\\namplitude*=0.5;\\n}\\nreturn total;\\n}\\nfloat roundF(float number){\\nreturn sign(number)*floor(abs(number)+0.5);\\n}\\nvoid main(void)\\n{\\nfloat brickW=1.0/numberOfBricksWidth;\\nfloat brickH=1.0/numberOfBricksHeight;\\nfloat jointWPercentage=0.01;\\nfloat jointHPercentage=0.05;\\nvec3 color=brickColor;\\nfloat yi=vUV.y/brickH;\\nfloat nyi=roundF(yi);\\nfloat xi=vUV.x/brickW;\\nif (mod(floor(yi),2.0) == 0.0){\\nxi=xi-0.5;\\n}\\nfloat nxi=roundF(xi);\\nvec2 brickvUV=vec2((xi-floor(xi))/brickH,(yi-floor(yi))/brickW);\\nif (yi<nyi+jointHPercentage && yi>nyi-jointHPercentage){\\ncolor=mix(jointColor,vec3(0.37,0.25,0.25),(yi-nyi)/jointHPercentage+0.2);\\n}\\nelse if (xi<nxi+jointWPercentage && xi>nxi-jointWPercentage){\\ncolor=mix(jointColor,vec3(0.44,0.44,0.44),(xi-nxi)/jointWPercentage+0.2);\\n}\\nelse {\\nfloat brickColorSwitch=mod(floor(yi)+floor(xi),3.0);\\nif (brickColorSwitch == 0.0)\\ncolor=mix(color,vec3(0.33,0.33,0.33),0.3);\\nelse if (brickColorSwitch == 2.0)\\ncolor=mix(color,vec3(0.11,0.11,0.11),0.3);\\n}\\ngl_FragColor=vec4(color,1.0);\\n}\"","import { Effect, ProceduralTexture, Color3, Scene, Texture, serialize, serializeAsColor3, SerializationHelper } from \"babylonjs\";\r\n\r\nEffect.ShadersStore[\"brickProceduralTexturePixelShader\"] = require(\"./brickProceduralTexture.fragment.fx\");\r\n\r\nexport class BrickProceduralTexture extends ProceduralTexture {\r\n    private _numberOfBricksHeight: number = 15;\r\n    private _numberOfBricksWidth: number = 5;\r\n    private _jointColor = new Color3(0.72, 0.72, 0.72);\r\n    private _brickColor = new Color3(0.77, 0.47, 0.40);\r\n\r\n    constructor(name: string, size: number, scene: Scene, fallbackTexture?: Texture, generateMipMaps?: boolean) {\r\n        super(name, size, \"brickProceduralTexture\", scene, fallbackTexture, generateMipMaps);\r\n        this.updateShaderUniforms();\r\n    }\r\n\r\n    public updateShaderUniforms() {\r\n        this.setFloat(\"numberOfBricksHeight\", this._numberOfBricksHeight);\r\n        this.setFloat(\"numberOfBricksWidth\", this._numberOfBricksWidth);\r\n        this.setColor3(\"brickColor\", this._brickColor);\r\n        this.setColor3(\"jointColor\", this._jointColor);\r\n    }\r\n\r\n    @serialize()\r\n    public get numberOfBricksHeight(): number {\r\n        return this._numberOfBricksHeight;\r\n    }\r\n\r\n    public set numberOfBricksHeight(value: number) {\r\n        this._numberOfBricksHeight = value;\r\n        this.updateShaderUniforms();\r\n    }\r\n\r\n    @serialize()\r\n    public get numberOfBricksWidth(): number {\r\n        return this._numberOfBricksWidth;\r\n    }\r\n\r\n    public set numberOfBricksWidth(value: number) {\r\n        this._numberOfBricksWidth = value;\r\n        this.updateShaderUniforms();\r\n    }\r\n\r\n    @serializeAsColor3()\r\n    public get jointColor(): Color3 {\r\n        return this._jointColor;\r\n    }\r\n\r\n    public set jointColor(value: Color3) {\r\n        this._jointColor = value;\r\n        this.updateShaderUniforms();\r\n    }\r\n\r\n    @serializeAsColor3()\r\n    public get brickColor(): Color3 {\r\n        return this._brickColor;\r\n    }\r\n\r\n    public set brickColor(value: Color3) {\r\n        this._brickColor = value;\r\n        this.updateShaderUniforms();\r\n    }\r\n\r\n    /**\r\n     * Serializes this brick procedural texture\r\n     * @returns a serialized brick procedural texture object\r\n     */\r\n    public serialize(): any {\r\n        var serializationObject = SerializationHelper.Serialize(this, super.serialize());\r\n        serializationObject.customType = \"BABYLON.BrickProceduralTexture\";\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    /**\r\n     * Creates a Brick Procedural Texture from parsed brick procedural texture data\r\n     * @param parsedTexture defines parsed texture data\r\n     * @param scene defines the current scene\r\n     * @param rootUrl defines the root URL containing brick procedural texture information\r\n     * @returns a parsed Brick Procedural Texture\r\n     */\r\n    public static Parse(parsedTexture: any, scene: Scene, rootUrl: string): BrickProceduralTexture {\r\n        var texture = SerializationHelper.Parse(() => new BrickProceduralTexture(parsedTexture.name, parsedTexture._size, scene, undefined, parsedTexture._generateMipMaps), parsedTexture, scene, rootUrl);\r\n\r\n        return texture;\r\n    }\r\n}","export * from \"./brickProceduralTexture\";","module.exports = __WEBPACK_EXTERNAL_MODULE_babylonjs__;"],"sourceRoot":""}