{"version":3,"sources":["webpack://PTLIB/webpack/universalModuleDefinition","webpack://PTLIB/webpack/bootstrap","webpack://PTLIB/../node_modules/webpack/buildin/global.js","webpack://PTLIB/../Tools/Gulp/../../proceduralTexturesLibrary/legacy/legacy-fire.ts","webpack://PTLIB/./src/fire/fireProceduralTexture.fragment.fx","webpack://PTLIB/../Tools/Gulp/../../proceduralTexturesLibrary/src/fire/fireProceduralTexture.ts","webpack://PTLIB/../Tools/Gulp/../../proceduralTexturesLibrary/src/fire/index.ts","webpack://PTLIB/external {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs\",\"commonjs2\":\"babylonjs\",\"amd\":\"babylonjs\"}"],"names":[],"mappings":"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","file":"babylon.fireProceduralTexture.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babylonjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"babylonjs-procedural-textures\", [\"babylonjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"babylonjs-procedural-textures\"] = factory(require(\"babylonjs\"));\n\telse\n\t\troot[\"PTLIB\"] = factory(root[\"BABYLON\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_babylonjs__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./legacy/legacy-fire.ts\");\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import * as proceduralTexture from \"../src/fire\";\r\n\r\n/**\r\n * This is the entry point for the UMD module.\r\n * The entry point for a future ESM package should be index.ts\r\n */\r\nvar globalObject = (typeof global !== 'undefined') ? global : ((typeof window !== 'undefined') ? window : undefined);\r\nif (typeof globalObject !== \"undefined\") {\r\n    for (var key in proceduralTexture) {\r\n        (<any>globalObject).BABYLON[key] = (<any>proceduralTexture)[key];\r\n    }\r\n}\r\n\r\nexport * from \"../src/fire\";","module.exports = \"precision highp float;\\nuniform float time;\\nuniform vec3 c1;\\nuniform vec3 c2;\\nuniform vec3 c3;\\nuniform vec3 c4;\\nuniform vec3 c5;\\nuniform vec3 c6;\\nuniform vec2 speed;\\nuniform float shift;\\nuniform float alphaThreshold;\\nvarying vec2 vUV;\\nfloat rand(vec2 n) {\\nreturn fract(cos(dot(n,vec2(12.9898,4.1414)))*43758.5453);\\n}\\nfloat noise(vec2 n) {\\nconst vec2 d=vec2(0.0,1.0);\\nvec2 b=floor(n),f=smoothstep(vec2(0.0),vec2(1.0),fract(n));\\nreturn mix(mix(rand(b),rand(b+d.yx),f.x),mix(rand(b+d.xy),rand(b+d.yy),f.x),f.y);\\n}\\nfloat fbm(vec2 n) {\\nfloat total=0.0,amplitude=1.0;\\nfor (int i=0; i<4; i++) {\\ntotal+=noise(n)*amplitude;\\nn+=n;\\namplitude*=0.5;\\n}\\nreturn total;\\n}\\nvoid main() {\\nvec2 p=vUV*8.0;\\nfloat q=fbm(p-time*0.1);\\nvec2 r=vec2(fbm(p+q+time*speed.x-p.x-p.y),fbm(p+q-time*speed.y));\\nvec3 c=mix(c1,c2,fbm(p+r))+mix(c3,c4,r.x)-mix(c5,c6,r.y);\\nvec3 color=c*cos(shift*vUV.y);\\nfloat luminance=dot(color.rgb,vec3(0.3,0.59,0.11));\\ngl_FragColor=vec4(color,luminance*alphaThreshold+(1.0-alphaThreshold));\\n}\"","import { Effect, ProceduralTexture, Vector2, Color3, Scene, Texture, serialize, serializeAsVector2, SerializationHelper } from \"babylonjs\";\r\n\r\nEffect.ShadersStore[\"fireProceduralTexturePixelShader\"] = require(\"./fireProceduralTexture.fragment.fx\");\r\n\r\nexport class FireProceduralTexture extends ProceduralTexture {\r\n    private _time: number = 0.0;\r\n    private _speed = new Vector2(0.5, 0.3);\r\n    private _autoGenerateTime: boolean = true;\r\n    private _fireColors: Color3[];\r\n    private _alphaThreshold: number = 0.5;\r\n\r\n    constructor(name: string, size: number, scene: Scene, fallbackTexture?: Texture, generateMipMaps?: boolean) {\r\n        super(name, size, \"fireProceduralTexture\", scene, fallbackTexture, generateMipMaps);\r\n        this._fireColors = FireProceduralTexture.RedFireColors;\r\n        this.updateShaderUniforms();\r\n    }\r\n\r\n    public updateShaderUniforms() {\r\n        this.setFloat(\"time\", this._time);\r\n        this.setVector2(\"speed\", this._speed);\r\n        this.setColor3(\"c1\", this._fireColors[0]);\r\n        this.setColor3(\"c2\", this._fireColors[1]);\r\n        this.setColor3(\"c3\", this._fireColors[2]);\r\n        this.setColor3(\"c4\", this._fireColors[3]);\r\n        this.setColor3(\"c5\", this._fireColors[4]);\r\n        this.setColor3(\"c6\", this._fireColors[5]);\r\n        this.setFloat(\"alphaThreshold\", this._alphaThreshold);\r\n    }\r\n\r\n    public render(useCameraPostProcess?: boolean) {\r\n        let scene = this.getScene();\r\n        if (this._autoGenerateTime && scene) {\r\n            this._time += scene.getAnimationRatio() * 0.03;\r\n            this.updateShaderUniforms();\r\n        }\r\n        super.render(useCameraPostProcess);\r\n    }\r\n\r\n    public static get PurpleFireColors(): Color3[] {\r\n        return [\r\n            new Color3(0.5, 0.0, 1.0),\r\n            new Color3(0.9, 0.0, 1.0),\r\n            new Color3(0.2, 0.0, 1.0),\r\n            new Color3(1.0, 0.9, 1.0),\r\n            new Color3(0.1, 0.1, 1.0),\r\n            new Color3(0.9, 0.9, 1.0)\r\n        ];\r\n    }\r\n\r\n    public static get GreenFireColors(): Color3[] {\r\n        return [\r\n            new Color3(0.5, 1.0, 0.0),\r\n            new Color3(0.5, 1.0, 0.0),\r\n            new Color3(0.3, 0.4, 0.0),\r\n            new Color3(0.5, 1.0, 0.0),\r\n            new Color3(0.2, 0.0, 0.0),\r\n            new Color3(0.5, 1.0, 0.0)\r\n        ];\r\n    }\r\n\r\n    public static get RedFireColors(): Color3[] {\r\n        return [\r\n            new Color3(0.5, 0.0, 0.1),\r\n            new Color3(0.9, 0.0, 0.0),\r\n            new Color3(0.2, 0.0, 0.0),\r\n            new Color3(1.0, 0.9, 0.0),\r\n            new Color3(0.1, 0.1, 0.1),\r\n            new Color3(0.9, 0.9, 0.9)\r\n        ];\r\n    }\r\n\r\n    public static get BlueFireColors(): Color3[] {\r\n        return [\r\n            new Color3(0.1, 0.0, 0.5),\r\n            new Color3(0.0, 0.0, 0.5),\r\n            new Color3(0.1, 0.0, 0.2),\r\n            new Color3(0.0, 0.0, 1.0),\r\n            new Color3(0.1, 0.2, 0.3),\r\n            new Color3(0.0, 0.2, 0.9)\r\n        ];\r\n    }\r\n\r\n    @serialize()\r\n    public get autoGenerateTime(): boolean {\r\n        return this._autoGenerateTime;\r\n    }\r\n\r\n    public set autoGenerateTime(value: boolean) {\r\n        this._autoGenerateTime = value;\r\n    }\r\n\r\n    public get fireColors(): Color3[] {\r\n        return this._fireColors;\r\n    }\r\n\r\n    public set fireColors(value: Color3[]) {\r\n        this._fireColors = value;\r\n        this.updateShaderUniforms();\r\n    }\r\n\r\n    @serialize()\r\n    public get time(): number {\r\n        return this._time;\r\n    }\r\n\r\n    public set time(value: number) {\r\n        this._time = value;\r\n        this.updateShaderUniforms();\r\n    }\r\n\r\n    @serializeAsVector2()\r\n    public get speed(): Vector2 {\r\n        return this._speed;\r\n    }\r\n\r\n    public set speed(value: Vector2) {\r\n        this._speed = value;\r\n        this.updateShaderUniforms();\r\n    }\r\n\r\n    @serialize()\r\n    public get alphaThreshold(): number {\r\n        return this._alphaThreshold;\r\n    }\r\n\r\n    public set alphaThreshold(value: number) {\r\n        this._alphaThreshold = value;\r\n        this.updateShaderUniforms();\r\n    }\r\n\r\n    /**\r\n     * Serializes this fire procedural texture\r\n     * @returns a serialized fire procedural texture object\r\n     */\r\n    public serialize(): any {\r\n        var serializationObject = SerializationHelper.Serialize(this, super.serialize());\r\n        serializationObject.customType = \"BABYLON.FireProceduralTexture\";\r\n\r\n        serializationObject.fireColors = [];\r\n        for (var i = 0; i < this._fireColors.length; i++) {\r\n            serializationObject.fireColors.push(this._fireColors[i].asArray());\r\n        }\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    /**\r\n     * Creates a Fire Procedural Texture from parsed fire procedural texture data\r\n     * @param parsedTexture defines parsed texture data\r\n     * @param scene defines the current scene\r\n     * @param rootUrl defines the root URL containing fire procedural texture information\r\n     * @returns a parsed Fire Procedural Texture\r\n     */\r\n    public static Parse(parsedTexture: any, scene: Scene, rootUrl: string): FireProceduralTexture {\r\n        var texture = SerializationHelper.Parse(() => new FireProceduralTexture(parsedTexture.name, parsedTexture._size, scene, undefined, parsedTexture._generateMipMaps), parsedTexture, scene, rootUrl);\r\n\r\n        var colors: Color3[] = [];\r\n        for (var i = 0; i < parsedTexture.fireColors.length; i++) {\r\n            colors.push(Color3.FromArray(parsedTexture.fireColors[i]));\r\n        }\r\n\r\n        texture.fireColors = colors;\r\n\r\n        return texture;\r\n    }\r\n}","export * from \"./fireProceduralTexture\";","module.exports = __WEBPACK_EXTERNAL_MODULE_babylonjs__;"],"sourceRoot":""}