{"version":3,"sources":["webpack://PPLIB/webpack/universalModuleDefinition","webpack://PPLIB/webpack/bootstrap","webpack://PPLIB/../Tools/Gulp/node_modules/webpack/buildin/global.js","webpack://PPLIB/../Tools/Gulp/../../postProcessLibrary/legacy/legacy-asciiArt.ts","webpack://PPLIB/../Tools/Gulp/../../postProcessLibrary/src/asciiArt/asciiArtPostProcess.ts","webpack://PPLIB/./src/asciiArt/asciiart.fragment.fx","webpack://PPLIB/../Tools/Gulp/../../postProcessLibrary/src/asciiArt/index.ts","webpack://PPLIB/external {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs\",\"commonjs2\":\"babylonjs\",\"amd\":\"babylonjs\"}"],"names":[],"mappings":"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","file":"babylon.asciiArtPostProcess.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babylonjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"babylonjs-postProcessesLibrary\", [\"babylonjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"babylonjs-postProcessesLibrary\"] = factory(require(\"babylonjs\"));\n\telse\n\t\troot[\"PPLIB\"] = factory(root[\"BABYLON\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_babylonjs__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./legacy/legacy-asciiArt.ts\");\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import * as postProcessLibrary from \"../src/asciiArt/index\";\r\n\r\n/**\r\n * This is the entry point for the UMD module.\r\n * The entry point for a future ESM package should be index.ts\r\n */\r\nvar globalObject = (typeof global !== 'undefined') ? global : ((typeof window !== 'undefined') ? window : undefined);\r\nif (typeof globalObject !== \"undefined\") {\r\n    for (var key in postProcessLibrary) {\r\n        (<any>globalObject).BABYLON[key] = (<any>postProcessLibrary)[key];\r\n    }\r\n}\r\n\r\nexport * from \"../src/asciiArt/index\";","import { BaseTexture, serialize, Nullable, Scene, Texture, SerializationHelper, PostProcess, Camera, Effect } from \"babylonjs\";\r\n\r\nEffect.ShadersStore[\"asciiartPixelShader\"] = require(\"./asciiart.fragment.fx\");\r\n\r\n/**\r\n * AsciiArtFontTexture is the helper class used to easily create your ascii art font texture.\r\n *\r\n * It basically takes care rendering the font front the given font size to a texture.\r\n * This is used later on in the postprocess.\r\n */\r\nexport class AsciiArtFontTexture extends BaseTexture {\r\n\r\n    @serialize(\"font\")\r\n    private _font: string;\r\n\r\n    @serialize(\"text\")\r\n    private _text: string;\r\n\r\n    private _charSize: number;\r\n\r\n    /**\r\n     * Gets the size of one char in the texture (each char fits in size * size space in the texture).\r\n     */\r\n    public get charSize(): number {\r\n        return this._charSize;\r\n    }\r\n\r\n    /**\r\n     * Create a new instance of the Ascii Art FontTexture class\r\n     * @param name the name of the texture\r\n     * @param font the font to use, use the W3C CSS notation\r\n     * @param text the caracter set to use in the rendering.\r\n     * @param scene the scene that owns the texture\r\n     */\r\n    constructor(name: string, font: string, text: string, scene: Nullable<Scene> = null) {\r\n        super(scene);\r\n\r\n        scene = this.getScene();\r\n\r\n        if (!scene) {\r\n            return;\r\n        }\r\n\r\n        this.name = name;\r\n        this._text == text;\r\n        this._font == font;\r\n\r\n        this.wrapU = Texture.CLAMP_ADDRESSMODE;\r\n        this.wrapV = Texture.CLAMP_ADDRESSMODE;\r\n        //this.anisotropicFilteringLevel = 1;\r\n\r\n        // Get the font specific info.\r\n        var maxCharHeight = this.getFontHeight(font);\r\n        var maxCharWidth = this.getFontWidth(font);\r\n\r\n        this._charSize = Math.max(maxCharHeight.height, maxCharWidth);\r\n\r\n        // This is an approximate size, but should always be able to fit at least the maxCharCount.\r\n        var textureWidth = Math.ceil(this._charSize * text.length);\r\n        var textureHeight = this._charSize;\r\n\r\n        // Create the texture that will store the font characters.\r\n        this._texture = scene.getEngine().createDynamicTexture(textureWidth, textureHeight, false, Texture.NEAREST_SAMPLINGMODE);\r\n        //scene.getEngine().setclamp\r\n        var textureSize = this.getSize();\r\n\r\n        // Create a canvas with the final size: the one matching the texture.\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.width = textureSize.width;\r\n        canvas.height = textureSize.height;\r\n        var context = <CanvasRenderingContext2D>canvas.getContext(\"2d\");\r\n        context.textBaseline = \"top\";\r\n        context.font = font;\r\n        context.fillStyle = \"white\";\r\n        context.imageSmoothingEnabled = false;\r\n\r\n        // Sets the text in the texture.\r\n        for (var i = 0; i < text.length; i++) {\r\n            context.fillText(text[i], i * this._charSize, -maxCharHeight.offset);\r\n        }\r\n\r\n        // Flush the text in the dynamic texture.\r\n\r\n        scene.getEngine().updateDynamicTexture(this._texture, canvas, false, true);\r\n    }\r\n\r\n    /**\r\n     * Gets the max char width of a font.\r\n     * @param font the font to use, use the W3C CSS notation\r\n     * @return the max char width\r\n     */\r\n    private getFontWidth(font: string): number {\r\n        var fontDraw = document.createElement(\"canvas\");\r\n        var ctx = <CanvasRenderingContext2D>fontDraw.getContext('2d');\r\n        ctx.fillStyle = 'white';\r\n        ctx.font = font;\r\n\r\n        return ctx.measureText(\"W\").width;\r\n    }\r\n\r\n    // More info here: https://videlais.com/2014/03/16/the-many-and-varied-problems-with-measuring-font-height-for-html5-canvas/\r\n    /**\r\n     * Gets the max char height of a font.\r\n     * @param font the font to use, use the W3C CSS notation\r\n     * @return the max char height\r\n     */\r\n    private getFontHeight(font: string): { height: number, offset: number } {\r\n        var fontDraw = document.createElement(\"canvas\");\r\n        var ctx = <CanvasRenderingContext2D>fontDraw.getContext('2d');\r\n        ctx.fillRect(0, 0, fontDraw.width, fontDraw.height);\r\n        ctx.textBaseline = 'top';\r\n        ctx.fillStyle = 'white';\r\n        ctx.font = font;\r\n        ctx.fillText('jH|', 0, 0);\r\n        var pixels = ctx.getImageData(0, 0, fontDraw.width, fontDraw.height).data;\r\n        var start = -1;\r\n        var end = -1;\r\n        for (var row = 0; row < fontDraw.height; row++) {\r\n            for (var column = 0; column < fontDraw.width; column++) {\r\n                var index = (row * fontDraw.width + column) * 4;\r\n                if (pixels[index] === 0) {\r\n                    if (column === fontDraw.width - 1 && start !== -1) {\r\n                        end = row;\r\n                        row = fontDraw.height;\r\n                        break;\r\n                    }\r\n                    continue;\r\n                }\r\n                else {\r\n                    if (start === -1) {\r\n                        start = row;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return { height: (end - start) + 1, offset: start - 1 };\r\n    }\r\n\r\n    /**\r\n     * Clones the current AsciiArtTexture.\r\n     * @return the clone of the texture.\r\n     */\r\n    public clone(): AsciiArtFontTexture {\r\n        return new AsciiArtFontTexture(this.name, this._font, this._text, this.getScene());\r\n    }\r\n\r\n    /**\r\n     * Parses a json object representing the texture and returns an instance of it.\r\n     * @param source the source JSON representation\r\n     * @param scene the scene to create the texture for\r\n     * @return the parsed texture\r\n     */\r\n    public static Parse(source: any, scene: Scene): AsciiArtFontTexture {\r\n        var texture = SerializationHelper.Parse(() => new AsciiArtFontTexture(source.name, source.font, source.text, scene),\r\n            source, scene, null);\r\n\r\n        return texture;\r\n    }\r\n}\r\n\r\n/**\r\n * Option available in the Ascii Art Post Process.\r\n */\r\nexport interface IAsciiArtPostProcessOptions {\r\n\r\n    /**\r\n     * The font to use following the w3c font definition.\r\n     */\r\n    font?: string;\r\n\r\n    /**\r\n     * The character set to use in the postprocess.\r\n     */\r\n    characterSet?: string;\r\n\r\n    /**\r\n     * This defines the amount you want to mix the \"tile\" or caracter space colored in the ascii art.\r\n     * This number is defined between 0 and 1;\r\n     */\r\n    mixToTile?: number;\r\n\r\n    /**\r\n     * This defines the amount you want to mix the normal rendering pass in the ascii art.\r\n     * This number is defined between 0 and 1;\r\n     */\r\n    mixToNormal?: number;\r\n}\r\n\r\n/**\r\n * AsciiArtPostProcess helps rendering everithing in Ascii Art.\r\n *\r\n * Simmply add it to your scene and let the nerd that lives in you have fun.\r\n * Example usage: var pp = new AsciiArtPostProcess(\"myAscii\", \"20px Monospace\", camera);\r\n */\r\nexport class AsciiArtPostProcess extends PostProcess {\r\n\r\n    /**\r\n     * The font texture used to render the char in the post process.\r\n     */\r\n    private _asciiArtFontTexture: AsciiArtFontTexture;\r\n\r\n    /**\r\n     * This defines the amount you want to mix the \"tile\" or caracter space colored in the ascii art.\r\n     * This number is defined between 0 and 1;\r\n     */\r\n    public mixToTile: number = 0;\r\n\r\n    /**\r\n     * This defines the amount you want to mix the normal rendering pass in the ascii art.\r\n     * This number is defined between 0 and 1;\r\n     */\r\n    public mixToNormal: number = 0;\r\n\r\n    /**\r\n     * Instantiates a new Ascii Art Post Process.\r\n     * @param name the name to give to the postprocess\r\n     * @camera the camera to apply the post process to.\r\n     * @param options can either be the font name or an option object following the IAsciiArtPostProcessOptions format\r\n     */\r\n    constructor(name: string, camera: Camera, options?: string | IAsciiArtPostProcessOptions) {\r\n        super(name,\r\n            'asciiart',\r\n            ['asciiArtFontInfos', 'asciiArtOptions'],\r\n            ['asciiArtFont'],\r\n            {\r\n                width: camera.getEngine().getRenderWidth(),\r\n                height: camera.getEngine().getRenderHeight()\r\n            },\r\n            camera,\r\n            Texture.TRILINEAR_SAMPLINGMODE,\r\n            camera.getEngine(),\r\n            true);\r\n\r\n        // Default values.\r\n        var font = \"40px Monospace\";\r\n        var characterSet = \" `-.'_:,\\\"=^;<+!*?/cL\\\\zrs7TivJtC{3F)Il(xZfY5S2eajo14[nuyE]P6V9kXpKwGhqAUbOd8#HRDB0$mgMW&Q%N@\";\r\n\r\n        // Use options.\r\n        if (options) {\r\n            if (typeof (options) === \"string\") {\r\n                font = <string>options;\r\n            }\r\n            else {\r\n                font = (<IAsciiArtPostProcessOptions>options).font || font;\r\n                characterSet = (<IAsciiArtPostProcessOptions>options).characterSet || characterSet;\r\n                this.mixToTile = (<IAsciiArtPostProcessOptions>options).mixToTile || this.mixToTile;\r\n                this.mixToNormal = (<IAsciiArtPostProcessOptions>options).mixToNormal || this.mixToNormal;\r\n            }\r\n        }\r\n\r\n        this._asciiArtFontTexture = new AsciiArtFontTexture(name, font, characterSet, camera.getScene());\r\n        var textureSize = this._asciiArtFontTexture.getSize();\r\n\r\n        this.onApply = (effect: Effect) => {\r\n            effect.setTexture(\"asciiArtFont\", this._asciiArtFontTexture);\r\n\r\n            effect.setFloat4(\"asciiArtFontInfos\",\r\n                this._asciiArtFontTexture.charSize,\r\n                characterSet.length,\r\n                textureSize.width,\r\n                textureSize.height);\r\n\r\n            effect.setFloat4(\"asciiArtOptions\",\r\n                this.width,\r\n                this.height,\r\n                this.mixToNormal,\r\n                this.mixToTile);\r\n        };\r\n    }\r\n}\r\n","module.exports = \"\\nvarying vec2 vUV;\\nuniform sampler2D textureSampler;\\nuniform sampler2D asciiArtFont;\\n\\nuniform vec4 asciiArtFontInfos;\\nuniform vec4 asciiArtOptions;\\n\\nfloat getLuminance(vec3 color)\\n{\\nreturn clamp(dot(color,vec3(0.2126,0.7152,0.0722)),0.,1.);\\n}\\n\\nvoid main(void) \\n{\\nfloat caracterSize=asciiArtFontInfos.x;\\nfloat numChar=asciiArtFontInfos.y-1.0;\\nfloat fontx=asciiArtFontInfos.z;\\nfloat fonty=asciiArtFontInfos.w;\\nfloat screenx=asciiArtOptions.x;\\nfloat screeny=asciiArtOptions.y;\\nfloat tileX=float(floor((gl_FragCoord.x)/caracterSize))*caracterSize/screenx;\\nfloat tileY=float(floor((gl_FragCoord.y)/caracterSize))*caracterSize/screeny;\\nvec2 tileUV=vec2(tileX,tileY);\\nvec4 tileColor=texture2D(textureSampler,tileUV);\\nvec4 baseColor=texture2D(textureSampler,vUV);\\nfloat tileLuminance=getLuminance(tileColor.rgb);\\nfloat offsetx=(float(floor(tileLuminance*numChar)))*caracterSize/fontx;\\nfloat offsety=0.0;\\nfloat x=float(mod(gl_FragCoord.x,caracterSize))/fontx;\\nfloat y=float(mod(gl_FragCoord.y,caracterSize))/fonty;\\nvec4 finalColor=texture2D(asciiArtFont,vec2(offsetx+x,offsety+(caracterSize/fonty-y)));\\nfinalColor.rgb*=tileColor.rgb;\\nfinalColor.a=1.0;\\nfinalColor=mix(finalColor,tileColor,asciiArtOptions.w);\\nfinalColor=mix(finalColor,baseColor,asciiArtOptions.z);\\ngl_FragColor=finalColor;\\n}\"","export * from \"./asciiArtPostProcess\";","module.exports = __WEBPACK_EXTERNAL_MODULE_babylonjs__;"],"sourceRoot":""}